CREATE DATABASE IF NOT EXISTS organization;
USE organization;
CREATE TABLE Worker(
WORKER_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
FIRST_NAME VARCHAR(25),
LAST_NAME VARCHAR(25),
SALARY INT(15),
JOINING_DATE DATETIME,
DEPARTMENT VARCHAR(30)
);
INSERT INTO Worker
(WORKER_ID,FIRST_NAME,LAST_NAME,SALARY,JOINING_DATE,DEPARTMENT) VALUES
(006,'MONIKA','ARORA',10000,'14-02-20 09.00.00','HR'),
(008,'MALV','ARORA',20000,'14-02-21 10.00.00','ADMIN');

INSERT INTO Worker
(WORKER_ID,FIRST_NAME,LAST_NAME,SALARY,JOINING_DATE,DEPARTMENT) VALUES
(118,'MALV','ARORA',20000,'14-02-21 10:00:00',NULL);

SELECT * FROM Worker;

CREATE TABLE IF NOT EXISTS Bonus(
	WORKER_REF_ID INT,
    BONUS_AMOUNT INT(10),
    BONUS_DATE DATETIME,
    FOREIGN KEY (WORKER_REF_ID)
    REFERENCES Worker(WORKER_ID)
    ON DELETE CASCADE
);
INSERT INTO Bonus 
   (WORKER_REF_ID,BONUS_AMOUNT,BONUS_DATE) VALUES
   (001,5000,'2016-7-20 01.00.00'),
   (002,400,'2016-7-20 02.00.00'),
   (003,1000,'2016-7-20 03.00.00'),
   (004,6000,'2016-7-20 04.00.00'),
   (005,5000,'2016-7-20 05.00.00');
   
   SELECT * FROM Bonus;
   
   CREATE TABLE IF NOT EXISTS Title(
   WORKER_REF_ID INT,
   WORKER_TITLE CHAR(25),
   AFFECTED_FROM DATETIME,
   FOREIGN KEY (WORKER_REF_ID)
   REFERENCES Worker(WORKER_ID)
   ON DELETE CASCADE
   );
   
   INSERT INTO Title
   (WORKER_REF_ID,WORKER_TITLE,AFFECTED_FROM) VALUES
   (001,'MANAGER','2020-11-1 01:00:00'),
    (002,'HR','2020-11-1 02:00:00'),
	(003,'MANAGER','2020-11-1 01:00:00'),
	(004,'BOSS','2020-11-1 01:00:00'),
	(005,'MANAGER','2020-11-1 01:00:00');
    
-- SELECT *FROM WORKER WHERE SALARY>5000;
SELECT *FROM WORKER WHERE SALARY BETWEEN 10000 AND 15000;
SELECT FIRST_NAME,SALARY FROM WORKER;
SELECT * FROM WORKER WHERE DEPARTMENT='HR' OR 'ADMIN';
SELECT * FROM WORKER WHERE DEPARTMENT IN ('HR','ADMIN','ACCOUNT');
SELECT * FROM WORKER WHERE DEPARTMENT NOT IN  ('HR','ADMIN','ACCOUNT');
SELECT *FROM WORKER WHERE DEPARTMENT IS NOT NULL;
SELECT DISTINCT DEPARTMENT FROM WORKER;
SELECT * FROM BONUS ORDER BY BONUS_AMOUNT;
SELECT * FROM BONUS ORDER BY BONUS_AMOUNT DESC;
SELECT * FROM BONUS ORDER BY BONUS_AMOUNT ASC;
SELECT * FROM WORKER;
SELECT * FROM WORKER WHERE FIRST_NAME LIKE "MAL%";
SELECT * FROM WORKER WHERE FIRST_NAME LIKE "%A";
SELECT * FROM WORKER WHERE FIRST_NAME LIKE "AL%";
SELECT DEPARTMENT FROM WORKER GROUP BY DEPARTMENT; -- BY DEFAULT DISTINCT
SELECT DEPARTMENT, COUNT(*) FROM WORKER GROUP BY DEPARTMENT;
-- AVG SALARY PER DEPARTMENT
SELECT DEPARTMENT,AVG(SALARY) FROM WORKER GROUP BY DEPARTMENT;
SELECT DEPARTMENT,MIN(SALARY) FROM WORKER GROUP BY DEPARTMENT;
SELECT DEPARTMENT,max(SALARY) FROM WORKER GROUP BY DEPARTMENT;
SELECT DEPARTMENT,SUM(SALARY) FROM WORKER GROUP BY DEPARTMENT;
-- GROUP BY(COUNT) FILTER USE HAVING , IT SIMILER TO WHERE FILTER
SELECT DEPARTMENT,COUNT(DEPARTMENT) FROM WORKER GROUP BY DEPARTMENT HAVING COUNT(DEPARTMENT)>2;


